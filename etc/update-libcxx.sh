#!/usr/bin/env bash
set -euo pipefail
source "$(dirname "$0")/lib.sh"
_pushd "$PROJECT"

eval `awk '$1 ~ /^LLVM_RELEASE=/' build.sh`

# checksums for LLVM_RELEASE=15.0.7
LIBCXX_SHA256=8d4eaff1cb6e41439fbf3ededb46998a0a3564d66dd289f661bdd459c9277c11
LIBCXXABI_SHA256=9b42f3951d845232e4cd58a0a9841838292dac138af19d4f8d0c08bd41004f43
LIBUNWIND_SHA256=406d199ae3a16add84017f40458a5e7c31f9412937fcb518715af0a0eeafbc0c

LIBCXX_SRC="$DEPS_DIR/libcxx-$LLVM_RELEASE"
LIBCXXABI_SRC="$DEPS_DIR/libcxxabi-$LLVM_RELEASE"
LIBUNWIND_SRC="$DEPS_DIR/libunwind-$LLVM_RELEASE"

LIBCXX_DST="$PROJECT/lib/libcxx"
LIBCXXABI_DST="$PROJECT/lib/libcxxabi"
LIBUNWIND_DST="$PROJECT/lib/libunwind"

LIBCXX_H_FILE="$PROJECT/src/syslib_libcxx.h"
LIBCXXABI_H_FILE="$PROJECT/src/syslib_libcxxabi.h"
LIBUNWIND_H_FILE="$PROJECT/src/syslib_libunwind.h"

URLBASE=https://github.com/llvm/llvm-project/releases/download

_srclist() {
  local f files
  IFS=$'\n' files=( $(sort -u -f <<< "$*") ); unset IFS
  for f in "${files[@]}"; do
    [ "$f" != "." ] || continue
    [ "${f:0:2}" != "./" ] || f="${f:2}"
    echo "  \"$f\","
  done
}

_srclist_find() { # <dir> [<find-cond> ...]
  local dir=$1; shift
  _srclist $(cd "$dir" && find . -type f "$@")
}

# ————————————————————————————————————————————————————————————————————————————————————
# libcxx

[ -d "$LIBCXX_SRC" ] || _download_and_extract_tar \
  "$URLBASE/llvmorg-$LLVM_RELEASE/libcxx-$LLVM_RELEASE.src.tar.xz" \
  "$LIBCXX_SRC" "$LIBCXX_SHA256"

_pushd "$LIBCXX_SRC"
rm -rf "$LIBCXX_DST"
mkdir -p "$LIBCXX_DST"

_copy include "$LIBCXX_DST/"
_copy src     "$LIBCXX_DST/"
find "$LIBCXX_DST" \( -name '.*' -o -name '*.txt' -o -name '*.in' \) -delete
_copy LICENSE.TXT "$LIBCXX_DST/"

# remove sources for platforms we don't support
rm -rf "$LIBCXX_DST"/src/support/{ibm,solaris,win32}

# remove int128_builtins.cpp; it provides __muloti4 which is already provided by librt.
# It crashes on Windows x86_64, according to https://github.com/ziglang/zig/issues/10719
rm "$LIBCXX_DST/src/filesystem/int128_builtins.cpp"

# remove empty directories
find "$LIBCXX_DST" -type d -empty -delete

# # disable inclusion of __config_site header
# sed -E -i '' \
#   -e 's/(#include <__config_site>)/\/\/ \1 [compis]/' \
#   "$LIBCXX_DST/include/__config"

echo "generating $(_relpath "$LIBCXX_H_FILE")"
cat << END > "$LIBCXX_H_FILE"
// Do not edit! Generated by ${SCRIPT_FILE##$PROJECT/}
// SPDX-License-Identifier: Apache-2.0

static const char* libcxx_sources[] = {
$(_srclist_find "$LIBCXX_DST/src" -name '*.[csS]' -o -name '*.cpp')
};
END

_popd

# ————————————————————————————————————————————————————————————————————————————————————
# libcxxabi

[ -d "$LIBCXXABI_SRC" ] || _download_and_extract_tar \
  "$URLBASE/llvmorg-$LLVM_RELEASE/libcxxabi-$LLVM_RELEASE.src.tar.xz" \
  "$LIBCXXABI_SRC" "$LIBCXXABI_SHA256"

_pushd "$LIBCXXABI_SRC"
rm -rf "$LIBCXXABI_DST"
mkdir -p "$LIBCXXABI_DST"

_copy include "$LIBCXXABI_DST/"
_copy src     "$LIBCXXABI_DST/"
find "$LIBCXXABI_DST" \( -name '.*' -o -name '*.txt' -o -name '*.in' \) -delete
_copy LICENSE.TXT "$LIBCXXABI_DST/"
find "$LIBCXXABI_DST" -type d -empty -delete

echo "generating $(_relpath "$LIBCXXABI_H_FILE")"
cat << END > "$LIBCXXABI_H_FILE"
// Do not edit! Generated by ${SCRIPT_FILE##$PROJECT/}
// SPDX-License-Identifier: Apache-2.0

static const char* libcxxabi_sources[] = {
$(_srclist_find "$LIBCXXABI_DST/src" -name '*.[csS]' -o -name '*.cpp')
};
END

_popd

# ————————————————————————————————————————————————————————————————————————————————————
# libunwind

[ -d "$LIBUNWIND_SRC" ] || _download_and_extract_tar \
  "$URLBASE/llvmorg-$LLVM_RELEASE/libunwind-$LLVM_RELEASE.src.tar.xz" \
  "$LIBUNWIND_SRC" "$LIBUNWIND_SHA256"

_pushd "$LIBUNWIND_SRC"
rm -rf "$LIBUNWIND_DST"
mkdir -p "$LIBUNWIND_DST"

_copy include     "$LIBUNWIND_DST/"
_copy src         "$LIBUNWIND_DST/"
_copy LICENSE.TXT "$LIBUNWIND_DST/"

# remove any unwanted files and empty directories
find "$LIBUNWIND_DST" \( -name '.*' -o -name 'CMakeLists.txt' \) -delete
find "$LIBUNWIND_DST" -type d -empty -delete

echo "generating $(_relpath "$LIBUNWIND_H_FILE")"
cat << END > "$LIBUNWIND_H_FILE"
// Do not edit! Generated by ${SCRIPT_FILE##$PROJECT/}
// SPDX-License-Identifier: Apache-2.0

static const char* libunwind_sources[] = {
$(_srclist_find "$LIBUNWIND_DST/src" -name '*.[csS]' -o -name '*.cpp')
};
END

_popd
