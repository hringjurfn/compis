fun ir_params(x, y int) int {
  x * y
}

fun ir_redundant_local(x, y int) int {
  var b = y // storage unused
  x * b     // b just points to y, not local storage
}


fun unused_if() int {
  var a int = 1
  if true {} else {}  // then and else branches ignored
  return a
}

fun unused_actually_used_ifthen() int {
  var a int = 0
  if true { a = 1 } else {} // "else" branch ignored
  return a
}
fun unused_actually_used_ifthen2() int {
  var a int = 0
  if true { a = 1 } // same IR as function above
  return a
}

fun unused_actually_used_ifelse() int {
  var a int = 0
  if true {} else { a = 2 } // "then" branch ignored
  return a
}


fun ir_if_then_result_ret(x, y int) int {
  if x > y {
    return x - y
  }
  x + y
}

fun ir_cond_assign(x, y int) int {
  var a = x
  if x > y {
    a = y
    if x < y {
      a = x
    }
  }
  a
}

fun ir_if_else_result(x, y int) int {
  if x > y {
    x - y
  } else {
    x + y
  }
}

fun ir_if_else_result2(x, y int) int {
  2 * if x > y {
    x - y
  } else {
    x + y + 2 + 4 + 1
  }
}
